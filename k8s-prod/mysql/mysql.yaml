apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 128Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/curtisfei218/group-project/k8s-prod/pv/mysql

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
               matchLabels:
                 app: "my-backend"
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchLabels:
                 app: "nginx"
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: mysql
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          args:
            - "--ignore-db-dir=lost+found"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "123456"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: init-scripts
          configMap:
            name: init-scripts
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: prod
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
